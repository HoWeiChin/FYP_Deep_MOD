import matplotlib.pyplot as plt
import numpy as np
import os
import pathlib
import re

def get_total_time(data_folder):
    """
        data_folder (str): folder which stores metadata and data of a simulated trial
        return total_time (str): total simulation time, a string, in seconds
    """
    file_name  = ""
    #loop over data folder to find .txt file which contains Ttotal
    print("data_folder", data_folder)
    for file in os.listdir(data_folder):
        #find all matching files with .txt at the back
        if re.findall("^\w+_simulation_values.txt$", file):
            print("file", file)
            file_name = file
            break
    print("file_name", file_name)
    text_file = open(os.path.join(data_folder,file_name), "r")
    lines = text_file.readlines()
    target_line = ""
    #for loop searches for line with Ttotal
    for line in lines:
        if "Ttotal" in line:
            target_line = line
            break
    #target_line looks something like:'Total_sim_time(Ttotal):10\n'
    #so we need to get 10 without the \n
    total_time = target_line.split(":")[0]
    total_time = total_time.split("\n")[0] #\n removed, we have '10' now
    return total_time



def plot_util(data_dir,save_dir):

    """
        data_dir (str): directory which contains a list of folders which store simulated data for different trials

    """
    pathlib.Path(save_dir).mkdir(parents=True,exist_ok=True)
    for sub_data_dir in os.listdir(data_dir):
        final_save_dir = os.path.join(save_dir, sub_data_dir + "_plot")
        #create new folder to save plot for the ith trial
        pathlib.Path(final_save_dir).mkdir(parents=True,exist_ok=True)
        xx = "x_analy.npy"
        yy = "y_analy.npy"
        u = "u_numer.npy"
        #cd into curr folder, we want to Total simulation time for text file for each trial folder
        curr_trial_folder = os.path.join(data_dir,sub_data_dir)
        #print("curr_trial_folder", curr_trial_folder)
        total_time = get_total_time(curr_trial_folder)
        time_label = "t=" + total_time #time_label is the label for data generated by numerical method

        fig = plt.figure()
        xx_loaded = np.load(xx)
        yy_loaded = np.load(yy)
        u_loaded = np.load(u)
        last_row = len(u_loaded) - 1 #last row is the final conc of bicoid when total simulation time is reached
        #plot data generated by analytical solution
        plt.plot(xx_loaded, yy_loaded, color="k", linewidth=4, label="Analytical")
        #plot data generated by analytical solution
        plt.plot(xx_loaded, u_loaded[last_row, :], '--', linewidth=2, label=time_label)
        plt.xlabel('x')
        plt.ylabel('u')
        plt.legend()
        file_name = os.path.join(final_save_dir, sub_data_dir+"_plot.jpg")
        print(final_save_dir)
        print(file_name)
        fig.savefig(file_name)

if __name__ == "__main__":
    data_dir = "C://Users//Wei Chin//Desktop//FYP_proj//data//"
    save_dir = "C:/Users/Wei Chin/Desktop/FYP_proj/plot"
    plot_util(data_dir, save_dir)


