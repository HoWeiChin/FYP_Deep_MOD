import math

def sample_data(
            x_npy, t_npy, u_npy,
            sampling_ratio, subset
        ):
    
    """
        x_npy (str): .npy file for spatial data generated by numerical method
        t_npy (str): .npy file for time data generated by numerical method
        u_npy (str): .npy file for bicoid concentration data generated by numerical method
        sampling_ratio (float): % of samples to be taken from space_time_data
        subset (int): slice some number of rows for x_npy, t_npy, u_npy
        
        returns: 
        space_time_data (np array): original data without sampling
        space_time_train (np array): sampled training data
        conc_train (np array): sampled ground truth data
        
    """
    space = np.load(x_npy)[subset:-1,:].flatten() #vectorise matrix
    time = np.load(t_npy)[subset:-1,:].flatten()  #vectorise matrix
    conc = np.load(u_npy)[subset:-1,:]
    conc = conc.reshape(conc.size,1)#vectorise matrix
    space_time_data = np.transpose((space,time))#combine space and time vectors into a matrix of 2 columns
    
    #sampling from data aka train-test-split, but without the test
    num_samples = math.floor(space_time_data.shape[0] * sampling_ratio)
    indices = np.random.choice(space_time_data.shape[0], num_samples, replace=False)
    space_time_train = space_time_data[indices]
    conc_train = conc[indices]
    
    return space_time_data, conc, space_time_train, conc_train
